{
	"info": {
		"_postman_id": "33d342b2-216f-46d1-8bc8-153a8fe35b09",
		"name": "HW_Postman_3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response_data_json = pm.response.json();\r",
							"console.log(response_data_json.token);\r",
							"pm.environment.set(\"token\", response_data_json.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/login?login=str&password=str",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					],
					"query": [
						{
							"key": "login",
							"value": "str"
						},
						{
							"key": "password",
							"value": "str"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User_Info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response_data_json = pm.response.json();\r",
							"let request_data = JSON.parse(pm.request.body.raw);\r",
							"let request_salary =  request_data.salary;\r",
							"\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"person\": {\r",
							"                \"u_age\": 20,\r",
							"                \"u_name\": [\r",
							"                    \"Mykhailo\",\r",
							"                    400,\r",
							"                    20\r",
							"                ],\r",
							"                \"u_salary_1_5_year\": 1600\r",
							"            },\r",
							"            \"qa_salary_after_12_months\": 1160.0,\r",
							"            \"qa_salary_after_6_months\": 800,\r",
							"            \"start_qa_salary\": 400\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"person\",\r",
							"        \"qa_salary_after_12_months\",\r",
							"        \"qa_salary_after_6_months\",\r",
							"        \"start_qa_salary\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"person\": {\r",
							"            \"$id\": \"#/properties/person\",\r",
							"            \"type\": \"object\",\r",
							"            \"title\": \"The person schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": {},\r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"u_age\": 20,\r",
							"                    \"u_name\": [\r",
							"                        \"Mykhailo\",\r",
							"                        400,\r",
							"                        20\r",
							"                    ],\r",
							"                    \"u_salary_1_5_year\": 1600\r",
							"                }\r",
							"            ],\r",
							"            \"required\": [\r",
							"                \"u_age\",\r",
							"                \"u_name\",\r",
							"                \"u_salary_1_5_year\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"u_age\": {\r",
							"                    \"$id\": \"#/properties/person/properties/u_age\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The u_age schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        20\r",
							"                    ]\r",
							"                },\r",
							"                \"u_name\": {\r",
							"                    \"$id\": \"#/properties/person/properties/u_name\",\r",
							"                    \"type\": \"array\",\r",
							"                    \"title\": \"The u_name schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": [],\r",
							"                    \"examples\": [\r",
							"                        [\r",
							"                            \"Mykhailo\",\r",
							"                            400\r",
							"                        ]\r",
							"                    ],\r",
							"                    \"additionalItems\": true,\r",
							"                    \"items\": {\r",
							"                        \"$id\": \"#/properties/person/properties/u_name/items\",\r",
							"                        \"anyOf\": [\r",
							"                            {\r",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/0\",\r",
							"                                \"type\": \"string\",\r",
							"                                \"title\": \"The first anyOf schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": \"\",\r",
							"                                \"examples\": [\r",
							"                                    \"Mykhailo\"\r",
							"                                ]\r",
							"                            },\r",
							"                            {\r",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/1\",\r",
							"                                \"type\": \"integer\",\r",
							"                                \"title\": \"The second anyOf schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": 0,\r",
							"                                \"examples\": [\r",
							"                                    400,\r",
							"                                    20\r",
							"                                ]\r",
							"                            }\r",
							"                        ]\r",
							"                    }\r",
							"                },\r",
							"                \"u_salary_1_5_year\": {\r",
							"                    \"$id\": \"#/properties/person/properties/u_salary_1_5_year\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The u_salary_1_5_year schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        1600\r",
							"                    ]\r",
							"                }\r",
							"            },\r",
							"            \"additionalProperties\": true\r",
							"        },\r",
							"        \"qa_salary_after_12_months\": {\r",
							"            \"$id\": \"#/properties/qa_salary_after_12_months\",\r",
							"            \"type\": \"number\",\r",
							"            \"title\": \"The qa_salary_after_12_months schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0.0,\r",
							"            \"examples\": [\r",
							"                1160.0\r",
							"            ]\r",
							"        },\r",
							"        \"qa_salary_after_6_months\": {\r",
							"            \"$id\": \"#/properties/qa_salary_after_6_months\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The qa_salary_after_6_months schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                800\r",
							"            ]\r",
							"        },\r",
							"        \"start_qa_salary\": {\r",
							"            \"$id\": \"#/properties/start_qa_salary\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The start_qa_salary schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                400\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(response_data_json, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"QA_salary_after_6_month equality test\", function(){\r",
							"    pm.expect(response_data_json.qa_salary_after_6_months).to.eql(request_salary * 2);\r",
							"});\r",
							"\r",
							"pm.test(\"QA_salary_after_12_month equality test\", function(){\r",
							"    pm.expect(response_data_json.qa_salary_after_12_months).to.eql(request_salary * 2.9);\r",
							"});\r",
							"\r",
							"pm.test(\"U_qa_salary_after_1,5_month equality test\", function(){\r",
							"    pm.expect(response_data_json.person.u_salary_1_5_year).to.eql(request_salary * 4);\r",
							"});\r",
							"pm.test(\"Take u_salary_1,5_year variable test\", function(){\r",
							"    pm.environment.set(\"salary\", response_data_json.person.u_salary_1_5_year);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\": 20,\r\n    \"salary\": 400,\r\n    \"name\": \"Mykhailo\",\r\n    \"auth_token\": \"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "New_Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response_data = pm.response.json();\r",
							"let request_data = pm.request.body.formdata.toObject();\r",
							"let request_salary = parseInt(request_data.salary);\r",
							"\r",
							"var schema = {\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"age\": 20,\r",
							"            \"name\": \"Mykhailo\",\r",
							"            \"salary\": [\r",
							"                400,\r",
							"                \"800\",\r",
							"                \"1200\"\r",
							"            ]\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"age\",\r",
							"        \"name\",\r",
							"        \"salary\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"$id\": \"#/properties/age\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The age schema\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                20\r",
							"            ]\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"$id\": \"#/properties/name\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The name schema\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"Mykhailo\"\r",
							"            ]\r",
							"        },\r",
							"        \"salary\": {\r",
							"            \"$id\": \"#/properties/salary\",\r",
							"            \"type\": \"array\",\r",
							"            \"title\": \"The salary schema\",\r",
							"            \"default\": [],\r",
							"            \"examples\": [\r",
							"                [\r",
							"                    400,\r",
							"                    \"800\"\r",
							"                ]\r",
							"            ],\r",
							"            \"additionalItems\": true,\r",
							"            \"items\": {\r",
							"                \"$id\": \"#/properties/salary/items\",\r",
							"                \"anyOf\": [\r",
							"                    {\r",
							"                        \"$id\": \"#/properties/salary/items/anyOf/0\",\r",
							"                        \"type\": \"integer\",\r",
							"                        \"title\": \"The first anyOf schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": 0,\r",
							"                        \"examples\": [\r",
							"                            400\r",
							"                        ]\r",
							"                    },\r",
							"                    {\r",
							"                        \"$id\": \"#/properties/salary/items/anyOf/1\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The second anyOf schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                        \"default\": \"\",\r",
							"                        \"examples\": [\r",
							"                            \"800\",\r",
							"                            \"1200\"\r",
							"                        ]\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(response_data, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Salary[0] equality test\", function(){\r",
							"    pm.expect(+response_data.salary[0]).to.eql(request_salary);\r",
							"})\r",
							"\r",
							"pm.test(\"Salary[1] equality test\", function(){\r",
							"    pm.expect(+response_data.salary[1]).to.eql(request_salary * 2);\r",
							"})\r",
							"\r",
							"pm.test(\"Salary[2] equality test\", function(){\r",
							"    pm.expect(+response_data.salary[2]).to.eql(request_salary * 3);\r",
							"})\r",
							"\r",
							"pm.test(\"Salary[2] greatest test\", function(){\r",
							"    pm.expect(+response_data.salary[2]).to.greaterThan(+response_data.salary[0]) && pm.expect(+response_data.salary[2]).to.greaterThan(+response_data.salary[1]);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "20",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "400",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Mykhailo",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "\"{{token}}\"",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test_Pet_Info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response_data = pm.response.json();\r",
							"let request_data = pm.request.body.formdata.toObject();\r",
							"let request_weight = request_data.weight;\r",
							"\r",
							"var schema ={\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"age\": 2,\r",
							"            \"daily_food\": 0.084,\r",
							"            \"daily_sleep\": 17.5,\r",
							"            \"name\": \"Khariton\"\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"age\",\r",
							"        \"daily_food\",\r",
							"        \"daily_sleep\",\r",
							"        \"name\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"$id\": \"#/properties/age\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The age schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                2\r",
							"            ]\r",
							"        },\r",
							"        \"daily_food\": {\r",
							"            \"$id\": \"#/properties/daily_food\",\r",
							"            \"type\": \"number\",\r",
							"            \"title\": \"The daily_food schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0.0,\r",
							"            \"examples\": [\r",
							"                0.084\r",
							"            ]\r",
							"        },\r",
							"        \"daily_sleep\": {\r",
							"            \"$id\": \"#/properties/daily_sleep\",\r",
							"            \"type\": \"number\",\r",
							"            \"title\": \"The daily_sleep schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0.0,\r",
							"            \"examples\": [\r",
							"                17.5\r",
							"            ]\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"$id\": \"#/properties/name\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The name schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"Khariton\"\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(response_data, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Daily_food equality test\", function(){\r",
							"    pm.expect(response_data.daily_food).to.eql(request_weight * 0.012);\r",
							"})\r",
							"\r",
							"pm.test(\"Daily_sleep equality test\", function(){\r",
							"    pm.expect(response_data.daily_sleep).to.eql(request_weight * 2.5);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "2",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "7",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Khariton",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "\"{{token}}\"",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_Test_User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response_data = pm.response.json();\r",
							"let request_data = pm.request.body.formdata.toObject();\r",
							"let environment_name = pm.environment.get(\"name\");\r",
							"\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"age\": \"20\",\r",
							"            \"family\": {\r",
							"                \"children\": [\r",
							"                    [\r",
							"                        \"Alex\",\r",
							"                        24\r",
							"                    ],\r",
							"                    [\r",
							"                        \"Kate\",\r",
							"                        12\r",
							"                    ]\r",
							"                ],\r",
							"                \"u_salary_1_5_year\": 1600\r",
							"            },\r",
							"            \"name\": \"Mykhailo\",\r",
							"            \"salary\": 400\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"age\",\r",
							"        \"family\",\r",
							"        \"name\",\r",
							"        \"salary\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"$id\": \"#/properties/age\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The age schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"20\"\r",
							"            ]\r",
							"        },\r",
							"        \"family\": {\r",
							"            \"$id\": \"#/properties/family\",\r",
							"            \"type\": \"object\",\r",
							"            \"title\": \"The family schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": {},\r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"children\": [\r",
							"                        [\r",
							"                            \"Alex\",\r",
							"                            24\r",
							"                        ],\r",
							"                        [\r",
							"                            \"Kate\",\r",
							"                            12\r",
							"                        ]\r",
							"                    ],\r",
							"                    \"u_salary_1_5_year\": 1600\r",
							"                }\r",
							"            ],\r",
							"            \"required\": [\r",
							"                \"children\",\r",
							"                \"u_salary_1_5_year\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"children\": {\r",
							"                    \"$id\": \"#/properties/family/properties/children\",\r",
							"                    \"type\": \"array\",\r",
							"                    \"title\": \"The children schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": [],\r",
							"                    \"examples\": [\r",
							"                        [\r",
							"                            [\r",
							"                                \"Alex\",\r",
							"                                24\r",
							"                            ],\r",
							"                            [\r",
							"                                \"Kate\",\r",
							"                                12\r",
							"                            ]\r",
							"                        ]\r",
							"                    ],\r",
							"                    \"additionalItems\": true,\r",
							"                    \"items\": {\r",
							"                        \"$id\": \"#/properties/family/properties/children/items\",\r",
							"                        \"anyOf\": [\r",
							"                            {\r",
							"                                \"$id\": \"#/properties/family/properties/children/items/anyOf/0\",\r",
							"                                \"type\": \"array\",\r",
							"                                \"title\": \"The first anyOf schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": [],\r",
							"                                \"examples\": [\r",
							"                                    [\r",
							"                                        \"Alex\",\r",
							"                                        24\r",
							"                                    ]\r",
							"                                ],\r",
							"                                \"additionalItems\": true,\r",
							"                                \"items\": {\r",
							"                                    \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items\",\r",
							"                                    \"anyOf\": [\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items/anyOf/0\",\r",
							"                                            \"type\": \"string\",\r",
							"                                            \"title\": \"The first anyOf schema\",\r",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                            \"default\": \"\",\r",
							"                                            \"examples\": [\r",
							"                                                \"Alex\"\r",
							"                                            ]\r",
							"                                        },\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items/anyOf/1\",\r",
							"                                            \"type\": \"integer\",\r",
							"                                            \"title\": \"The second anyOf schema\",\r",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                            \"default\": 0,\r",
							"                                            \"examples\": [\r",
							"                                                24\r",
							"                                            ]\r",
							"                                        }\r",
							"                                    ]\r",
							"                                }\r",
							"                            },\r",
							"                            {\r",
							"                                \"$id\": \"#/properties/family/properties/children/items/anyOf/1\",\r",
							"                                \"type\": \"array\",\r",
							"                                \"title\": \"The second anyOf schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": [],\r",
							"                                \"examples\": [\r",
							"                                    [\r",
							"                                        \"Kate\",\r",
							"                                        12\r",
							"                                    ]\r",
							"                                ],\r",
							"                                \"additionalItems\": true,\r",
							"                                \"items\": {\r",
							"                                    \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items\",\r",
							"                                    \"anyOf\": [\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items/anyOf/0\",\r",
							"                                            \"type\": \"string\",\r",
							"                                            \"title\": \"The first anyOf schema\",\r",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                            \"default\": \"\",\r",
							"                                            \"examples\": [\r",
							"                                                \"Kate\"\r",
							"                                            ]\r",
							"                                        },\r",
							"                                        {\r",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items/anyOf/1\",\r",
							"                                            \"type\": \"integer\",\r",
							"                                            \"title\": \"The second anyOf schema\",\r",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                            \"default\": 0,\r",
							"                                            \"examples\": [\r",
							"                                                12\r",
							"                                            ]\r",
							"                                        }\r",
							"                                    ]\r",
							"                                }\r",
							"                            }\r",
							"                        ]\r",
							"                    }\r",
							"                },\r",
							"                \"u_salary_1_5_year\": {\r",
							"                    \"$id\": \"#/properties/family/properties/u_salary_1_5_year\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The u_salary_1_5_year schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        1600\r",
							"                    ]\r",
							"                }\r",
							"            },\r",
							"            \"additionalProperties\": true\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"$id\": \"#/properties/name\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The name schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"Mykhailo\"\r",
							"            ]\r",
							"        },\r",
							"        \"salary\": {\r",
							"            \"$id\": \"#/properties/salary\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The salary schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                400\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"}\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(response_data, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Is name equal to environment 'name' variable test\", function(){\r",
							"    pm.expect(request_data.name).to.eql(environment_name);\r",
							"})\r",
							"\r",
							"pm.test(\"Is age equal to request 'age' variable test\", function(){\r",
							"    pm.expect(request_data.age).to.eql(response_data.age);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "20",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Mykhailo",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "\"{{token}}\"",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response_currency_data = pm.response.json();\r",
							"let random_id = Math.floor(Math.random() * response_currency_data.length);  \r",
							"console.log(response_currency_data[random_id]);\r",
							"pm.environment.set(\"cur_id\", response_currency_data[random_id].Cur_ID);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "\"{{token}}\"",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "Curr_Byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let token = pm.environment.get(\"token\");\r",
							"const post_formdata_request = {\r",
							"    url: 'http://162.55.220.72:5005/currency',\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"    'Content-Type': 'application/json'\r",
							"  },\r",
							"  'body': {\r",
							"            'mode': 'formdata',\r",
							"            'formdata': [\r",
							"                {'key':'auth_token', 'value': token }\r",
							"            ]\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(post_formdata_request, (error, response) => {\r",
							"    currensy_list = response.json();\r",
							"    console.log(currensy_list.length);\r",
							"   currensy_list.forEach(element => {\r",
							"        let current_id = element.Cur_ID;\r",
							"        let post_curr_bin_request = {\r",
							"            url: 'http://162.55.220.72:5005/curr_byn',\r",
							"            method: 'POST',\r",
							"            header: {\r",
							"                'Content-Type': 'application/json'\r",
							"            },\r",
							"            'body': {\r",
							"                'mode': 'formdata',\r",
							"                'formdata': [\r",
							"                {'key':'auth_token', 'value': token },\r",
							"                {'key':'curr_code', 'value': current_id}\r",
							"            ]\r",
							"        }\r",
							"    };\r",
							"        pm.sendRequest(post_curr_bin_request, (error, response) => {\r",
							"            if(response.code == 500){\r",
							"                console.log(\"Wrong\");\r",
							"                return;\r",
							"            }else if(response.code == 200){\r",
							"                current_currensy_info = response.json();\r",
							"                if(\"Cur_OfficialRate\" in current_currensy_info){\r",
							"                    console.log(current_currensy_info);\r",
							"                }else{\r",
							"                    console.log(\"Dont have\");\r",
							"                    return;\r",
							"                }\r",
							"            }\r",
							"        });\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "\"{{token}}\"",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "126",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/curr_byn",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	]
}